/*copiar el codigo de la pagina en un archivo de texto en la misma ubicacion en la que se encuentra el proyecto*/


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char * Scrape(char contenido[], char producto[]);
int EncontrarTag(char contenido[], char tag[], int pos);
int EncontrarProducto(char contenido[], char producto[], int pos);
int SubStr(char contenido[], char strSubString[], int pos);
char * ExtraerInfo(char contenido[], int pos);
char * LeerDatos(char nombreArchivo[]);
void ImprimirDatosEnPantalla(char contenido[]);
void EscribirDatosEnArchivo(char contenido[], char nombreArchivo[]);

int main()
{
	char * contenido = LeerDatos("contenido.txt");
	char * informacionExtraida;

	if (contenido == NULL)
		return 0;

	informacionExtraida = Scrape(contenido, "MARTILLO");
	ImprimirDatosEnPantalla(informacionExtraida);
	EscribirDatosEnArchivo(informacionExtraida, "informacionExtraida.txt");

	if (informacionExtraida != NULL)
		free(informacionExtraida);

	free(contenido);
	return 0;
}


char * LeerDatos(char nombreArchivo[])
{
	int tamanoArchivo;
	FILE * archivo;
	char * contenido;

	archivo = fopen(nombreArchivo, "rt");

	if (archivo == NULL)
	{
		printf("\nError leyendo el archivo %s", nombreArchivo);
		return NULL;
	}
	fseek(archivo, 0, SEEK_END);
	tamanoArchivo = ftell(archivo);
	fseek(archivo, 0, SEEK_SET);

	contenido = (char *) malloc((tamanoArchivo + 1) * sizeof(char));

	fread(contenido, sizeof(char), tamanoArchivo, archivo);
	fclose(archivo);
	contenido[tamanoArchivo] = '\0';

	return contenido;
}

void EscribirDatosEnArchivo(char contenido[], char nombreArchivo[])
{
	FILE *archivo;
	int i = 0;

	archivo = fopen(nombreArchivo, "wt");
	if (archivo == NULL)
	{
		printf("\nError creando el archivo %s\n", nombreArchivo);
		return;
	}

	while (contenido[i] != '\0')
		fputc(contenido[i++], archivo);

	fclose(archivo);
	printf("\nArchivo %s fue creado", nombreArchivo);
}

void ImprimirDatosEnPantalla(char contenido[])
{
	int i = 0;

	while (contenido[i] != '\0')
		printf("%c", contenido[i++]);
}
char * Scrape(char contenido[], char producto[])
{
	int i = 0, resultadoPos = 0;
	char tagProducto[] = "class=\"product-name\">";
	char tagPrecio[] = "class=\"price\"";
	char * informacionExtraida;
	char * resultado;

	resultado = (char *)malloc(strlen(contenido) * sizeof(char));
	*resultado = '\0';
	while ((i = EncontrarTag(contenido, tagProducto, i)))
	{
		if (EncontrarProducto(contenido, producto, i))
		{
			informacionExtraida = ExtraerInfo(contenido, i);
			if (informacionExtraida != NULL)
			{
				//printf("%s", informacionExtraida);
				resultado = strcat(resultado, informacionExtraida);
				free(informacionExtraida);
			}
			i = EncontrarTag(contenido, tagPrecio, i);
			informacionExtraida = ExtraerInfo(contenido, i);
			if (informacionExtraida != NULL)
			{
				//printf("%s", informacionExtraida);
				resultado = strcat(resultado, informacionExtraida);
				free(informacionExtraida);
			}
		}
	}
	return resultado;
}

int EncontrarTag(char contenido[], char tag[], int pos)
{
	while (contenido[pos] != '\0')
	{
		if (SubStr(contenido, tag, pos))
		{
			pos += strlen(tag);
			while (contenido[pos++] != '>');
			return (pos);
		}
		pos++;
	}
	return 0;
}

int EncontrarProducto(char contenido[], char producto[], int pos) {

	while (contenido[pos] != '\0' && contenido[pos] != '\n')
		if (SubStr(contenido, producto, pos++))
			return 1;

	return 0;
}

char * ExtraerInfo(char contenido[], int pos)
{
	int i = 0;
	char * informacionExtraida;

	informacionExtraida = (char *) malloc(strlen(contenido) * sizeof(char));

	while (contenido[pos] != '\0' && contenido[pos] != '<')
		informacionExtraida [i++] = contenido[pos++];

	informacionExtraida[i++] = '\n';
	informacionExtraida[i] = '\0';

	return informacionExtraida;
}

int SubStr(char contenido[], char strSubString[], int pos)
{
	int i;

	for (i = 0; contenido[i + pos] != '\0' && contenido[i + pos] != '\n'; i++)
		if (strSubString[i] != contenido[i + pos])
			break;

	return (strSubString[i] == '\0');
}
