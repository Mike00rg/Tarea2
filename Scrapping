/*copiar el codigo de la pagina en un archivo de texto en la misma ubicacion en la que se encuentra el proyecto*/


#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void Scrape(char contenido[]);
int EncontrarTag(char contenido[], char tag[], int pos);
int EncontrarProducto(char contenido[], char producto[], int pos);
int SubStr(char contenido[], char strSubString[], int pos);
int ExtraerInfo(char contenido[], int pos);
char * LeerDatos(char nombreArchivo[]);

int main()
{
	char * contenido = LeerDatos("contenido.txt");

	Scrape(contenido);
	free(contenido);
	return 0;
}

char * LeerDatos(char nombreArchivo[])
{
	int tamanoArchivo;
	FILE * archivo;
	char * contenido;

	archivo = fopen(nombreArchivo, "rt");

	if (archivo == NULL)
		return NULL;
	
	fseek(archivo, 0, SEEK_END);
	tamanoArchivo = ftell(archivo);
	fseek(archivo, 0, SEEK_SET);
	
	contenido = malloc((tamanoArchivo + 1) * sizeof(char));
	
	fread(contenido, sizeof(char), tamanoArchivo, archivo);
	fclose(archivo);
	contenido[tamanoArchivo] = '\0';
	
	return contenido;
}

void Scrape(char contenido[])
{
	int i = 0, count = 0;
	char tagProducto[] = "class=\"product-name\">";
	char tagPrecio[] = "class=\"price\"";
	char producto[] = "MARTILLO";

	while ((i = EncontrarTag(contenido, tagProducto, i)))
	{
		if (EncontrarProducto(contenido, producto, i))
		{
			printf("\n%d) ", ++count);
			ExtraerInfo(contenido, i);
			i = EncontrarTag(contenido, tagPrecio, i);
			ExtraerInfo(contenido, i);
		}
	}
}

int EncontrarTag(char contenido[], char tag[], int pos)
{
	while (contenido[pos] != '\0')
	{
		if (SubStr(contenido, tag, pos))
		{
			pos += strlen(tag);
			while (contenido[pos++] != '>');
			return (pos);
		}
		pos++;
	}
	return 0;
}

int EncontrarProducto(char contenido[], char producto[], int pos) {

	while (contenido[pos] != '\0' && contenido[pos] != '\n')
		if (SubStr(contenido, producto, pos++))
			return 1;

	return 0;
}

int ExtraerInfo(char contenido[], int pos)
{
	while (contenido[pos] != '\0' && contenido[pos] != '<')
		printf("%c", contenido[pos++]);

	printf("\n");
	return pos;
}

int SubStr(char contenido[], char strSubString[], int pos)
{
	int i;

	for (i = 0; contenido[i + pos] != '\0' && contenido[i + pos] != '\n'; i++)
		if (strSubString[i] != contenido[i + pos])
			break;

	return (strSubString[i] == '\0');
}
